
services:
  postgres:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_DB: library
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d library" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.3
    container_name: redis
    ports:
      - "6380:6379"
    restart: unless-stopped

#  minio:
#    image: minio/minio:latest
#    ports:
#      - "9000:9000"   # MinIO server
#      - "9001:9001"   # MinIO console (web UI)
#    environment:
#      MINIO_ROOT_USER: root
#      MINIO_ROOT_PASSWORD: password
#    command: server /data --console-address ":9001"
#    volumes:
#      - minio-data:/data

#  axon-server:
##    image: axoniq/axonserver
#    image: axoniq/axonserver
##    hostname: axonserver
#    volumes:
#      - axonserver-data:/data
#      - axonserver-events:/eventdata
#      - axonserver-config:/config:ro
#    ports:
#      - '8024:8024'
#      - '8124:8124'
#      - '8224:8224'
#    networks:
#      - my-network
#    environment:
#      AXONIQ_AXONSERVER_STANDALONE: "true"
#      AXONIQ_AXONSERVER_LOG_LEVEL: DEBUG
#      AXONIQ_AXONSERVER_JDK_VERSION: 21

#
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: library
#    ports:
#      - "8081:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_started
#      axon-server:
#        condition: service_started
##      - postgres
##      - redis
##      - axon-server
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/library
#      SPRING_DATASOURCE_USERNAME: root
#      SPRING_DATASOURCE_PASSWORD: password
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#    restart: unless-stopped
#    networks:
#      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  db:
#  minio-data:
#  axonserver-data:
#  axonserver-events:
#  axonserver-config:

